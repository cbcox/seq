Candace Cox
CL3 Pseudocode


add argument to parser(-F, --format-word, choices: arabic, floating, alpha, ALPHA, roman, ROMAN)

if args.formatword:
	formatword()

def formatword():
	if args.formatword == ('arabic'):
		start = long(args.x)
		end = long(args.y)
		if there isn't a z arg:
			z = 1
		else:
			z = long(args.z)
		while start < end
			print start
			start += z
		sys.exit()
	
	if args.formatword == ('floating'):
		floatstart = float(args.x)
		floatend = float(args.y)
		if no z arg:
			z = 1
		else:
			float = float(args.z)
		while start < end:
			print start
			start += z
		sys.exit()
	
	if args.formatword == ('alpha'):
		start = args.x
		end = args.y
		if no z arg:
			z = 1
		else:
			z = int(args.z)
		while start < end:
			print start
		sys.exit()

	if args.formatword == ('ALPHA'):
		start = args.x
		end = args.y
		if no z arg:
			start = 1
		else:
			z = int(args.z)
		while start < end
			print start
		sys.exit()

	if args.formatword == ('roman'):
		start = args.x
		end = args.y
		int_start = roman.fromRoman(start)  ##Using python.py from diveintopython.com
		int_end = roman.fromRoman(end)
		print start
		while int_start < int_end:
			int_start += 1
			roman_start = roman.toRoman(int_start)
			print roman_start.lower()
		sys.exit()

	if args.formatword == ('ROMAN'):
			start = args.x
			end = args.y
			int_start = roman.fromRoman(start) 
			int_end = roman.fromRoman(end)
			print start.upper()
			while int_start < int_end:
				int_start += 1
				roman_start = roman.toRoman(int_start)
				print roman_start.upper()
			sys.exit()

	
